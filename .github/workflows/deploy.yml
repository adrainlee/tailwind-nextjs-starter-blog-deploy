name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@3.6.1 --activate

      - name: Install Dependencies
        run: yarn install

      - name: Build Check
        run: yarn build

      - name: Type Check
        run: yarn tsc --noEmit

      - name: Lint Check
        run: yarn lint

      - name: Prettier Check
        run: yarn prettier --check .

      - name: Security Audit
        run: yarn npm audit

  deploy:
    needs: ci
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@3.6.1 --activate

      - name: Install Dependencies
        run: yarn install

      - name: Build Production
        run: |
          export NODE_ENV=production
          yarn build

      - name: Deploy to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: >-
            .next/,
            .contentlayer/,
            .devcontainer/,
            .vscode/,
            .husky/,
            public/,
            app/,
            components/,
            css/,
            data/,
            docs/,
            faq/,
            layouts/,
            scripts/,
            templates/,
            contentlayer.config.ts,
            next.config.js,
            postcss.config.js,
            tailwind.config.js,
            tsconfig.json,
            eslint.config.mjs,
            prettier.config.js,
            next-env.d.ts,
            jsconfig.json,
            package.json,
            yarn.lock,
            .yarnrc.yml,
            .yarn/,
            vercel.json,
            README.md,
            LICENSE
          target: '/data/blog'

      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 设置Node.js环境
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            cd /data/blog || exit 1
            nvm use 18 || exit 1

            # 设置系统限制
            ulimit -n 65535

            # 启用并配置Yarn
            corepack enable
            corepack prepare yarn@3.6.1 --activate
            mkdir -p .yarn/releases

            # 确保目录权限
            chown -R ubuntu:ubuntu .

            # 清理和准备环境
            rm -rf node_modules
            rm -rf .next
            # 设置环境变量
            export NODE_ENV=production
            export NEXT_TELEMETRY_DISABLED=1

            # 清理缓存
            yarn cache clean
            rm -rf .next/cache

            # 安装依赖并构建
            yarn install --frozen-lockfile
            yarn build

            # 重启应用
            pm2 delete blog || true
            pm2 start npm --name "blog" -- start -- --port 3000 --hostname 0.0.0.0
