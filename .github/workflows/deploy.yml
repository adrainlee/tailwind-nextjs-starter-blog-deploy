name: CI/CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'data/blog/**'
      - 'app/**'
      - 'components/**'
      - 'layouts/**'
      - 'css/**'
      - 'public/**'
      - 'data/authors/**'
      - 'data/*.{js,ts}'
      - '*.config.{js,ts}'
  pull_request:
    branches: [main]
    paths:
      - 'data/blog/**'
      - 'app/**'
      - 'components/**'
      - 'layouts/**'
      - 'css/**'
      - 'public/**'
      - 'data/authors/**'
      - 'data/*.{js,ts}'
      - '*.config.{js,ts}'

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@3.6.1 --activate

      - name: Install Dependencies
        run: yarn install

      - name: Build Check
        run: yarn build

      - name: Type Check
        run: yarn tsc --noEmit

      - name: Lint Check
        run: yarn lint

      - name: Prettier Check
        run: yarn prettier --check .

      - name: Security Audit
        run: yarn npm audit

  deploy:
    needs: ci
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@3.6.1 --activate

      - name: Install Dependencies
        run: yarn install

      - name: Build Production
        run: |
          export NODE_ENV=production
          yarn build

      - name: Deploy to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: >-
            .next/,
            .contentlayer/,
            public/,
            package.json,
            yarn.lock,
            .yarnrc.yml,
            .yarn/releases/,
            next.config.js,
            postcss.config.js,
            tailwind.config.js
          target: '/data/blog'

      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 设置Node.js环境
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            cd /data/blog || exit 1
            nvm use 18 || exit 1

            # 设置环境变量
            export NODE_ENV=production
            export NEXT_TELEMETRY_DISABLED=1

            # 安装生产环境依赖
            yarn install --frozen-lockfile --production

            # 确保目录权限
            chown -R ubuntu:ubuntu .

            # 重启应用
            pm2 delete blog || true
            pm2 start yarn \
              --name "blog" \
              --time \
              --max-memory-restart 500M \
              -- start
