name: CD

on:
  push:
    branches: [ main ]
    paths:
      - 'data/blog/**'
      - 'app/**'
      - 'components/**'
      - 'layouts/**'

jobs:
  deploy:
    name: 构建和部署
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          
      - name: 安装依赖
        run: yarn install --frozen-lockfile
        
      - name: 构建项目
        run: yarn build
        
      - name: 验证构建结果
        run: |
          if [ ! -d ".next" ]; then
            echo "构建失败: .next 目录不存在"
            exit 1
          fi
          
      - name: 创建部署包
        run: |
          tar -czf deploy.tar.gz .next package.json yarn.lock public
          
      - name: 设置 SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}
          
      - name: 添加服务器到已知主机
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          
      - name: 备份当前版本
        run: |
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} '
          cd /var/www/blog &&
          if [ -d ".next" ]; then
            timestamp=$(date +%Y%m%d_%H%M%S)
            mkdir -p backups
            tar -czf backups/backup_${timestamp}.tar.gz .next package.json yarn.lock public
            ls -t backups/backup_* | tail -n +4 | xargs rm -f
          fi'
          
      - name: 部署新版本
        id: deploy
        run: |
          scp deploy.tar.gz ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/var/www/blog/
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} '
          cd /var/www/blog &&
          tar -xzf deploy.tar.gz &&
          rm deploy.tar.gz &&
          yarn install --production &&
          pm2 restart blog'
          
      - name: 部署成功通知
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: context.issue.number,
              body: '✅ 部署成功!'
            })
            
      - name: 部署失败回滚
        if: failure()
        run: |
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} '
          cd /var/www/blog &&
          latest_backup=$(ls -t backups/backup_* | head -1) &&
          if [ -n "$latest_backup" ]; then
            tar -xzf $latest_backup &&
            yarn install --production &&
            pm2 restart blog
          fi'
          
      - name: 部署失败通知
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: context.issue.number,
              body: '❌ 部署失败,已自动回滚到上一个稳定版本!'
            })